{"version":3,"file":"routeServices.js","sourceRoot":"","sources":["routeServices.ts"],"names":[],"mappings":";;AAAA,MAAM,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACrC,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AAEvC,MAAM,YAAY,GAAG;IACjB,iBAAiB,EAAE,OAAO,CAAC,EAAE;QACzB,KAAK,CAAC,OAAO,EAAE;aACV,IAAI,CAAC,GAAG,EAAE;YACP,IAAI,KAAK,CAAC;gBACN,KAAK,EAAE,OAAO,CAAC,KAAK;gBACpB,IAAI,EAAE,OAAO,CAAC,IAAI;gBAClB,OAAO,EAAE,OAAO,CAAC,OAAO;gBACxB,QAAQ,EAAE,OAAO,CAAC,MAAM;aAC3B,CAAC,CAAC,IAAI,EAAE;iBACJ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAA;QACvC,CAAC,CAAC,CAAA;IACV,CAAC;CACJ,CAAC;AAEF,kBAAe,YAAY,CAAC","sourcesContent":["const mongoose = require('mongoose');\nconst Route = mongoose.model('routes');\n\nconst routeMethods = {\n    saveSearchedRoute: payload => {\n        Route.findOne()\n            .then(() => {\n                new Route({\n                    owner: payload.owner,\n                    name: payload.name,\n                    address: payload.address,\n                    imageURL: payload.imgURL\n                }).save()\n                    .catch(err => console.log(err))\n            })\n    }\n};\n\nexport default routeMethods;"]}