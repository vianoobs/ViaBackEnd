{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;;;;AAAA,mCAAoC;AACpC,MAAM,GAAG,GAAG,OAAO,EAAE,CAAC;AACtB,MAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC7B,OAAO,CAAC,gBAAgB,CAAC,CAAC;AAC1B,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAC5B,OAAO,CAAC,sBAAsB,CAAC,CAAC;AAChC,OAAO,CAAC,2BAA2B,CAAC,CAAC;AACrC,MAAM,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACrC,MAAM,aAAa,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;AAChD,MAAM,YAAY,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AAC9C,MAAM,IAAI,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;AACzC,MAAM,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACrC,MAAM,UAAU,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AAE1C,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;AAChB,sBAAsB;AACtB,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAC,eAAe,EAAE,IAAI,EAAC,CAAC;KACnD,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;AAC5C,GAAG,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC;AACxB,GAAG,CAAC,GAAG,CAAC,aAAa,CAAC;IAClB,MAAM,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI;IAChC,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC;CACpB,CAAC,CAAC,CAAC;AACJ,QAAQ,CAAC,aAAa,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE;IAClC,IAAI,WAAW,GAAG,EAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,EAAC,CAAA;IAC1H,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC;AACH,QAAQ,CAAC,eAAe,CAAC,CAAC,WAAW,EAAE,IAAI,EAAE,EAAE;IAC3C,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC,CAAA;AAC3B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;AAC3B,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AACnD,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAC;AAC/B,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC;AAG5B,8DAAsC;AACtC,gBAAM,CAAC,GAAG,CAAC,CAAC","sourcesContent":["import express = require('express');\nconst app = express();\nconst cors = require('cors');\nrequire('../models/User');\nrequire('../models/Routes');\nrequire('../services/passport');\nrequire('../Services/routeServices');\nconst passport = require('passport');\nconst cookieSession = require('cookie-session');\nconst cookieParser = require('cookie-parser');\nconst keys = require('../Config/config');\nconst mongoose = require('mongoose');\nconst bodyParser = require(\"body-parser\");\n\napp.use(cors());\n//connecting to the db\nmongoose.connect(keys.mongoURI, {useNewUrlParser: true})\n    .catch(message => console.log(message));\napp.use(cookieParser());\napp.use(cookieSession({\n    maxAge: 30 * 24 * 60 * 60 * 1000,\n    keys: [keys.keys]\n}));\npassport.serializeUser((user, done) => {\n    let userOptions = {userId: user.userId, firstName: user.firstName, lastName: user.lastName, displayName: user.displayName}\n    done(null, userOptions);\n});\npassport.deserializeUser((userOptions, done) => {\n    done(null, userOptions)\n});\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(passport.initialize());\napp.use(passport.session());\n\n\nimport routes from '../Routes/routes';\nroutes(app);\n\n\n\n"]}