{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["import express = require('express');\nimport axios from 'axios';\nimport superagent from 'superagent';\nconst app = express();\n\nlet accessToken;\n\ninterface IAuthReq {\n    client_id: string;\n    client_secret: string;\n    Resource: string;\n    grant_type: string;\n}\n\ninterface IAuthRes {\n    token_type: string;\n    expires_in: string;\n    ext_expires_in: string;\n    expires_on: string;\n    not_before: string;\n    resource: string;\n    access_token: string;\n}\n\napp.use(function (req: express.Request, res: express.Response, next) {\n    console.log('Time:', Date.now());\n    // Check req obj for any needed headers\n    const token = req.header('access_token');\n    if (token && token.length > 1) {\n        accessToken = token;\n        next();\n    } else {\n        const authBody: IAuthReq = {\n            'client_id': '466c8f34-e2af-42bb-87c2-4802206168f7',\n            'client_secret': 'islsiVY6tCzezyBOHkkiMEXK7Nq07mCyj3MurrvzdYU=',\n            'Resource': '2cd2fb9a-18c2-4eb1-931b-8885c6151548',\n            'grant_type': 'client_credentials'\n        };\n        const url = 'https://login.microsoftonline.com/2a3033c2-ad76-426c-9c5a-23233cde4cde/oauth2/token';\n\n        superagent\n            .post(url)\n            .type(\"form\")\n            .send(authBody).then(authRes => {\n                const body = authRes.body as IAuthRes;\n                accessToken = body.access_token;\n                res.setHeader('access_token', accessToken);\n                next();\n            }).catch(err => {\n                console.log(err);\n            });\n    }\n\n});\n\napp.get('/hello', (req: express.Request, res: express.Response) => {\n    res.send('Hello from the project root!')\n});\n\napp.get('*', (req: express.Request, res: express.Response) => {\nres.send('Nothing to see here!')\n});\n\n// catch 404 and forward to error handler\napp.use(function (req: express.Request, res: express.Response, next) {\n    let err = new Error('Not Found');\n    err['status'] = 404;\n    next(err);\n});\n\n// error handlers\n\n// development error handler\n// will print stacktrace\nif (app.get('env') === 'development') {\n    app.use((err: any, req: express.Request, res: express.Response) => {\n        res.status(err['status'] || 500);\n        res.send({\n            message: err.message,\n            error: err\n        });\n    });\n}\n\n// production error handler\n// no stacktraces leaked to user\napp.use((err: any, req: express.Request, res: express.Response) => {\n    res.status(err.status || 500);\n    res.send({\n        message: err.message,\n        error: {}\n    });\n});\n\napp.set('port', process.env.port || 8080);\n\nconsole.log(\"hello\");\n\nlet server = app.listen(app.get('port'), function () {\n    console.log('Express server listening on port ' + server.address()['port']);\n});\n"]}