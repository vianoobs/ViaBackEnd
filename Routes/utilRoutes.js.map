{"version":3,"file":"utilRoutes.js","sourceRoot":"","sources":["utilRoutes.ts"],"names":[],"mappings":";;;;;AAAA,4DAAoC;AACpC,kDAAwD;AAExD,MAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC7B,0CAA2C;AAG3C,IAAI,WAAW,CAAC;AAmBhB,MAAM,UAAU,GAAG,GAAG,CAAC,EAAE;IAErB,GAAG,CAAC,GAAG,CAAC,UAAU,GAAoB,EAAE,GAAqB,EAAE,IAAI;QAC/D,oCAAoC;QACpC,uCAAuC;QACvC,MAAM,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QACzC,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YAC3B,WAAW,GAAG,KAAK,CAAC;YACpB,GAAG,CAAC,SAAS,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC;YAC3C,IAAI,EAAE,CAAC;SACV;aAAM;YACH,MAAM,QAAQ,GAAa;gBACvB,WAAW,EAAE,sCAAsC;gBACnD,eAAe,EAAE,8CAA8C;gBAC/D,UAAU,EAAE,sCAAsC;gBAClD,YAAY,EAAE,oBAAoB;aACrC,CAAC;YACF,MAAM,GAAG,GAAG,qFAAqF,CAAC;YAElG,oBAAU;iBACL,IAAI,CAAC,GAAG,CAAC;iBACT,IAAI,CAAC,MAAM,CAAC;iBACZ,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;gBAC/B,MAAM,IAAI,GAAG,OAAO,CAAC,IAAgB,CAAC;gBACtC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC;gBAChC,GAAG,CAAC,SAAS,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC;gBAC3C,IAAI,EAAE,CAAC;YACX,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;gBACX,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;SACN;IAEL,CAAC,CAAC,CAAC;IAEH,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;IAEhB,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;IAE3B,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,GAAoB,EAAE,GAAqB,EAAE,EAAE;QAC7D,MAAM,MAAM,GAAc,EAAC,GAAG,EAAE,WAAW,EAAE,GAAG,EAAE,YAAY,EAAC,CAAC;QAChE,MAAM,WAAW,GAAc,EAAC,GAAG,EAAE,WAAW,EAAE,GAAG,EAAE,YAAY,EAAC,CAAC;QACrE,MAAM,OAAO,GAAG,IAAI,iBAAO,CAAC,MAAM,EAAE,WAAW,EAAE,iCAAiC,EAAE,WAAW,CAAC,CAAC;QACjG,OAAO,CAAC,cAAc,CAAC,CAAC,EAAE,OAAO,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YAC9D,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;YACX,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC;IAEP,CAAC,CAAC,CAAC;IAEP,yCAAyC;IACrC,GAAG,CAAC,GAAG,CAAC,UAAU,GAAoB,EAAE,GAAqB,EAAE,IAAI;QAC/D,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,WAAW,CAAC,CAAC;QACjC,GAAG,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC;QACpB,IAAI,CAAC,GAAG,CAAC,CAAC;IACd,CAAC,CAAC,CAAC;AACP,CAAC,CAAC;AAEF,kBAAe,UAAU,CAAC","sourcesContent":["import superagent from \"superagent\";\nimport {ILocation, ViaTrip} from \"../api/logic/ViaTrip\";\n\nconst cors = require('cors');\nimport bodyParser = require(\"body-parser\");\nimport express = require('express');\n\nlet accessToken;\n\ninterface IAuthReq {\n    client_id: string;\n    client_secret: string;\n    Resource: string;\n    grant_type: string;\n}\n\ninterface IAuthRes {\n    token_type: string;\n    expires_in: string;\n    ext_expires_in: string;\n    expires_on: string;\n    not_before: string;\n    resource: string;\n    access_token: string;\n}\n\nconst utilRoutes = app => {\n\n    app.use(function (req: express.Request, res: express.Response, next) {\n        // console.log('Time:', Date.now());\n        // Check req obj for any needed headers\n        const token = req.header('access_token');\n        if (token && token.length > 1) {\n            accessToken = token;\n            res.setHeader('access_token', accessToken);\n            next();\n        } else {\n            const authBody: IAuthReq = {\n                'client_id': '466c8f34-e2af-42bb-87c2-4802206168f7',\n                'client_secret': 'islsiVY6tCzezyBOHkkiMEXK7Nq07mCyj3MurrvzdYU=',\n                'Resource': '2cd2fb9a-18c2-4eb1-931b-8885c6151548',\n                'grant_type': 'client_credentials'\n            };\n            const url = 'https://login.microsoftonline.com/2a3033c2-ad76-426c-9c5a-23233cde4cde/oauth2/token';\n\n            superagent\n                .post(url)\n                .type(\"form\")\n                .send(authBody).then(authRes => {\n                const body = authRes.body as IAuthRes;\n                accessToken = body.access_token;\n                res.setHeader('access_token', accessToken);\n                next();\n            }).catch(err => {\n                console.log(err);\n            });\n        }\n\n    });\n\n    app.use(cors());\n\n    app.use(bodyParser.json());\n\n    app.get('/test', (req: express.Request, res: express.Response) => {\n        const source: ILocation = {lat: '29.427839', lon: '-98.494636'};\n        const destination: ILocation = {lat: '29.424525', lon: '-98.487076'};\n        const viaTrip = new ViaTrip(source, destination, 'https://codegtfsapi.viainfo.net', accessToken);\n        viaTrip.findCloseStops(3, viaTrip.sourceLocation).then(response => {\n            res.send(response);\n        }).catch(err => {\n            res.send(err);\n        });\n\n    });\n\n// catch 404 and forward to error handler\n    app.use(function (req: express.Request, res: express.Response, next) {\n        let err = new Error('Not Found');\n        err['status'] = 404;\n        next(err);\n    });\n};\n\nexport default utilRoutes;"]}